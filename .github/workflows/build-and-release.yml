name: Build and Release

on:
  push:
    branches:
      - main
    paths:
      - setup.py

env:
  BUILD_OUTPUT_DIR: dist

jobs:
  build:
    runs-on: ubuntu-latest

    permissions: 
      contents: write

    steps:
    - name: Checkout
      id: checkout
      uses: actions/checkout@v4

    - name: Read .tool-versions
      id: tool_versions
      run: awk '{print toupper($1) "_VERSION=" $2}' .tool-versions >> $GITHUB_ENV

    - name: Setup PDM
      id: setup_pdm
      uses: pdm-project/setup-pdm@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}
        update-python: true
        version: ${{ env.PDM_VERSION }}
    
    - name: Install dependencies
      id: install_deps
      run: pdm install

    - name: Read package version
      id: get_version
      run: pdm show --version | awk '{print "VERSION=" $1}' >> $GITHUB_ENV
    
    - name: Get existing release
      id: get_existing_release
      uses: joutvhu/get-release@v1
      with:
        throwing: false
        tag_name: v${{ env.VERSION }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build wheel
      id: build_wheel
      if: steps.get_existing_release.outputs.id == null
      run: pdm build -d ${{ env.BUILD_OUTPUT_DIR }}

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      if: steps.get_existing_release.outputs.id == null
      with:
        name: v${{ env.VERSION }}
        tag_name: v${{ env.VERSION }}
        generate_release_notes: true
        files: |
          ${{ env.BUILD_OUTPUT_DIR }}/*
          LICENSE